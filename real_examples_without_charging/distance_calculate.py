from haversine import haversine
import numpy as np

# 주어진 좌표값 (위도, 경도)
coordinates = np.array([
(37.57021681,126.9780855),
(37.53085466,127.002246),
(37.532273,126.9991865),
(37.53298846,126.9979655),
(37.5344065,126.9733648),
(37.53309022,126.995698),
(37.55028671,126.9741955),
(37.53418055,126.9957002),
(37.5313728,126.9984023),
(37.53512069,126.987278),
(37.534535,126.947027),
(37.53456465,126.980292),
(37.53127872,126.9905611),
(37.5381983,126.9553881),
(37.53416981,127.0004119),
(37.53579323,126.9693948),
(37.53226847,126.9615413),
(37.54836448,126.9777058),
(37.53133306,126.9950396),
(37.53172938,126.9921712),
(37.5332488,127.0048157),
(37.5509756,126.9722373),
(37.52529029,126.9639345),
(37.5373339,126.965376),
(37.53493384,126.9610704),
(37.54416519,126.9885472),
(37.545795,127.002202),
(37.54162093,126.996235),
(37.53475867,126.9768578),
(37.51977834,126.9745986),
(37.54590938,126.9632083),
(37.54689819,126.9626636),
(37.52559728,126.966015),
(37.52082823,126.979799),
(37.52486115,126.9912555),
(37.53011637,126.9530904),
(37.53396791,126.9493177),
(37.53631931,126.9724114),
(37.55477707,126.9772255),
(37.54485562,127.0168373),
(37.54088924,127.0154196),
(37.55793023,126.9370194),
(37.54520851,126.9522673),
(37.54705538,126.9471496),
(37.55372008,126.9317249),
(37.55601006,126.9625988),
(37.55692161,126.9614846),
(37.54990702,126.9356035),
(37.54979815,126.9375706),
(37.55007756,126.9275632)
])

# 맨해튼 거리를 저장할 8x8 행렬 초기화
haversine_manhattan_distances_matrix = np.zeros((50, 50))

# 좌표 간의 맨해튼 거리 계산 (가로 세로 각각에 대해 하버사인 적용)
for i in range(50):
    for j in range(50):
        if i != j:
            # 좌표 간의 가로, 세로 거리 계산
            lat1, lon1 = coordinates[i]
            lat2, lon2 = coordinates[j]
            horizontal_distance = haversine((lat1, lon1), (lat1, lon2))
            vertical_distance = haversine((lat1, lon2), (lat2, lon2))
            
            # 가로 세로 거리의 합을 맨해튼 거리로 사용
            haversine_manhattan_distance = horizontal_distance + vertical_distance
            
            # 맨해튼 거리를 행렬에 저장
            haversine_manhattan_distances_matrix[i, j] = haversine_manhattan_distance

# 결과 출력
print(haversine_manhattan_distances_matrix)


#유클리드
from haversine import haversine
import numpy as np

# 주어진 좌표값 (위도, 경도)
coordinates = np.array([
   (37.57021681,126.9780855),
(37.53085466,127.002246),
(37.532273,126.9991865),
(37.53298846,126.9979655),
(37.5344065,126.9733648),
(37.53309022,126.995698),
(37.55028671,126.9741955),
(37.53418055,126.9957002),
(37.5313728,126.9984023),
(37.53512069,126.987278),
(37.534535,126.947027),
(37.53456465,126.980292),
(37.53127872,126.9905611),
(37.5381983,126.9553881),
(37.53416981,127.0004119),
(37.53579323,126.9693948),
(37.53226847,126.9615413),
(37.54836448,126.9777058),
(37.53133306,126.9950396),
(37.53172938,126.9921712),
(37.5332488,127.0048157),
(37.5509756,126.9722373),
(37.52529029,126.9639345),
(37.5373339,126.965376),
(37.53493384,126.9610704),
(37.54416519,126.9885472),
(37.545795,127.002202),
(37.54162093,126.996235),
(37.53475867,126.9768578),
(37.51977834,126.9745986),
(37.54590938,126.9632083),
(37.54689819,126.9626636),
(37.52559728,126.966015),
(37.52082823,126.979799),
(37.52486115,126.9912555),
(37.53011637,126.9530904),
(37.53396791,126.9493177),
(37.53631931,126.9724114),
(37.55477707,126.9772255),
(37.54485562,127.0168373),
(37.54088924,127.0154196),
(37.55793023,126.9370194),
(37.54520851,126.9522673),
(37.54705538,126.9471496),
(37.55372008,126.9317249),
(37.55601006,126.9625988),
(37.55692161,126.9614846),
(37.54990702,126.9356035),
(37.54979815,126.9375706),
(37.55007756,126.9275632)
])

# 유클리드 거리를 저장할 8x8 행렬 초기화
haversine_distances_matrix = np.zeros((50, 50))

# 좌표 간의 유클리드 거리 계산 (haversine 함수 적용)
for i in range(50):
    for j in range(50):
        if i != j:
            # 주석으로 표시된 부분이 행렬의 값입니다.
            haversine_distances_matrix[i, j] = haversine(coordinates[i], coordinates[j])

# 결과 출력
# 행렬의 값만 표시
print(haversine_distances_matrix)
